@model (Zigbee2MqttAssistant.Models.Mqtt.Bridge bridge, Zigbee2MqttAssistant.Models.Settings settings)
@{
    ViewData["Title"] = "Devices";
}

<div class="d-flex justify-content-between align-items-center">
	<h1 class="display-4">Devices</h1>

	<div class="btn-group">
		<button id="force-refresh-btn" type="button" class="btn btn-secondary">Refresh</button>
		<button type="button" class="btn btn-secondary dropdown-toggle dropdown-toggle-split" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
			<span id="refresh-selected-interval">Off</span>
			<span class="sr-only">Toggle Dropdown</span>
		</button>
		<div class="dropdown-menu">
			<span class="refresh-interval dropdown-item">Off</span>
			<span class="refresh-interval dropdown-item">5s</span>
			<span class="refresh-interval dropdown-item">10s</span>
			<span class="refresh-interval dropdown-item">30s</span>
			<span class="refresh-interval dropdown-item">1m</span>
			<span class="refresh-interval dropdown-item">5m</span>
			<span class="refresh-interval dropdown-item">10m</span>
		</div>
	</div>
</div>

<div id="devices">
	@await Html.PartialAsync("_PartialDevices", Model)
</div>

@section Scripts
{
	<script type="text/javascript">

    let refreshInterval = null;

    function getMsecondsValueFromString(string) {
        if (string === "Off"){
            return 0
        }
        return eval(string.replace("s", "*1000").replace("m", "*60000"))
    }

    async function refreshDevices() {
        const devicesResult = await $.ajax('@Url.Action("Devices")');
        $("#devices").html(devicesResult)
    }

    $(document).ready(()=>{
        $("#force-refresh-btn").on("click", () => {
            refreshDevices()
        })

        $(".refresh-interval").on("click", (evt) => {
            $("#refresh-selected-interval").html(evt.target.innerText)
            const milliseconds = getMsecondsValueFromString(evt.target.innerText)
            clearInterval(refreshInterval)
            if (milliseconds > 0) {
                refreshInterval = setInterval(() => refreshDevices(), milliseconds)
            }
         })
      })
  </script>
}
